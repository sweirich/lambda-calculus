\documentclass{article}

\usepackage{amsmath,amssymb,amsthm}
\usepackage{ottalt}
\usepackage{mathpartir}
\usepackage{supertabular}
\usepackage{url}

\usepackage[dvipsnames]{xcolor}
\usepackage{color}

\theoremstyle{definition}
\newtheorem{definition}{Definition}[section]
\newtheorem{lemma}{Lemma}[section]

\inputott{lc-rules}

\title{Graph Model for the untyped lambda calculus and for 
Verse}

\begin{document}
\maketitle

\section{Part one: Graph Model for the untyped lambda calculus}

This document describes a denotational semantics for a
call-by-value untyped lambda calculus based on 
a ``graph'' model. 

The file \texttt{simple/model.v} contains a sketch of this semantics for the untyped lambda calculus. 

\[ e ::= x | [[\x.e]] | [[e1 e2]] \]

This semantics interprets lambda calculus terms as a graph: a set of
input-output pairs, each pair written $w \mapsto v$. This set could be infinite, or it
could be approximated by some finite set.

This set also includes a trivial term \texttt{v\_fun}, written 
$\circ$. 

If $\mathcal{W}$ is the domain of all semantic values then 
the graph of the identity function looks like this:

\[ \{ w \mapsto w\ |\ w \in \mathcal{W} \} \cup \{ \circ \} \]

But, how do we represent this set in a proof assistant?



\section{Part two: Extending the model to verse}

The files in the  \texttt{verse/} subdirectory contain the semantics of a much richer language.

\begin{itemize}
\item Verse contains multiple types of values: not only functions, but also integers and finite lists of values.
\item Because of the multiple types, there is the possibility
that the meaning of a term might be a \emph{run-time error}. For
example, if we try to apply the number 3 to itself.
\item Verse terms, if they don't produce an error, may also 
  produce multiple results, using choice: $[[ e1 | e2 ]]$.
\end{itemize}



\end{document}
